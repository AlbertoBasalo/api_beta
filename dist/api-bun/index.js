var X={LOG_LEVEL:Bun.env.LOG_LEVEL||"info",STORAGE:Bun.env.STORAGE||"memory"};function G(j,$){if(E!=="verbose")return;console.log(`\u2754 ${j}`,J($))}function T(j,$){if(E==="none")return;console.log(`\uD83D\uDCD8 ${j}`,J($))}function V(j,$){if(E==="none")return;console.warn(`\uD83D\uDCD2 ${j}`,J($))}function Y(j,$){if(E==="none")return;console.error(`\uD83D\uDD25 ${j}`,J($))}var J=function(j){if(!j)return"";if(typeof j==="object")return JSON.stringify(j);return j},E=X.LOG_LEVEL;async function h(j){try{const $=w(j);return G("Reading seed data",$),await Bun.file($).json()}catch($){if(T("No seed data available. Starting empty collection.",j),X.STORAGE==="file")V("Creating file storage",j),O(j,[]);return[]}}async function O(j,$){if(X.STORAGE!=="file")return;try{const z=JSON.stringify($,null,2);await Bun.write(w(j),z)}catch(z){Y("Error writing to file. Using only memory.",z)}}var w=function(j){return`db/${j}.json`};async function R(j){return await F(j)}async function U(j,$,z){return(await R(j)).filter((Q)=>Q[$]==z)}async function A(j,$){const z=await F(j);return z.push($),await x(j,z),$}async function _(j,$,z){const H=await F(j),M=H.findIndex((S)=>S.id===$);if(M===-1)return null;return H[M]=z,await x(j,H),H[M]}async function C(j,$){const z=await F(j),H=z.findIndex((M)=>M.id==$);if(H>=0)z.splice(H,1),await x(j,z)}async function F(j){if(!k[j]){const $=await h(j);k[j]=$}return[...k[j]]}async function x(j,$){k[j]=[...$],await O(j,$)}var k={};async function P(j){return await R(j)}async function L(j,$){const H=(await U(j,"id",$))[0],M=H?void 0:`Item with id ${$} not found in ${j}`;return{result:H,error:M}}async function B(j,$,z){return await U(j,$,z)}async function b(j,$){let z=$.id;if(z){if((await L(j,z)).result)return{result:void 0,error:`Item with id ${z} already exists in ${j}`}}else z=Math.random().toString(36).substr(2,9);const Q={...$,id:z,createdAt:new Date,updatedAt:null};return{result:await A(j,Q)}}async function v(j,$,z){const H=await L(j,$);if(H.error)return{error:`Item ${$} not found on ${j}`};const M=new Date,Q={...H.result,...z,updatedAt:M},S=await _(j,$,Q),Z=S?Q:void 0,W=S?void 0:`Item ${$} not updated on ${j}`;return{result:Z,error:W}}async function D(j,$){await C(j,$)}async function N(j){if(j.id)return I(j);if(j.key&&j.value)return u(j);return q(j)}async function p(j){const $=await b(j.resource,j.body),z=$.result?201:409,H=$.result?JSON.stringify($.result):$.error;return new Response(H,{status:z})}async function g(j){if(!j.id)j.id=j.body.id;const $=await v(j.resource,j.id,j.body),z=$.result?200:404,H=$.result?JSON.stringify($.result):$.error;return new Response(H,{status:z})}async function y(j){return await D(j.resource,j.id),new Response(null,{status:204})}async function q(j){const $=await P(j.resource),z=$.length>0?200:200,H=JSON.stringify($);return new Response(H,{status:z})}async function I(j){const $=await L(j.resource,j.id),z=$.result?200:404,H=$.result?JSON.stringify($.result):$.error;return new Response(H,{status:z})}async function u(j){const $=await B(j.resource,j.key,j.value),z=$.length>0?200:200,H=JSON.stringify($);return new Response(H,{status:z})}async function m(j){try{const $=j.method,z=new URL(j.url).pathname,H=z.split("/")[1]||"",M=z.split("/")[2]||"",Q=new URL(j.url).searchParams,S=Q.get("key")||"",Z=Q.get("value")||"";let W={};if($==="POST"||$==="PUT")W=await j.json();const K={method:$,endPoint:z,resource:H,id:M,key:S,value:Z,body:W};return G("Request info",K),K}catch($){return Y("Error extracting request info",$),null}}async function f(j){if(j.endPoint==="/")return new Response("Hello, This API bun \uD83E\uDD56");if(j.endPoint==="/favicon.ico")return new Response(null,{status:204});return null}async function s(j){const $=await m(j);if(!$)return new Response("Bad request",{status:400});switch($.method){case"GET":const z=await f($);if(z)return z;return await N($);case"POST":return await p($);case"PUT":return await g($);case"DELETE":return await y($);default:return new Response("Method Not Allowed",{status:405})}}var d=Bun.serve({port:3000,fetch(j){try{return s(j)}catch($){return Y("Error processing request",$),new Response($.message,{status:500})}}});T(`Listening on ${d.url}`,X);
